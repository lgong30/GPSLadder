#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""This module is for management of the GPS figure.
version: 1.0.0
author: Long Gong
email: long.github@gmail.com



Major Changes:
1. remove the feature of make pdf
2. make TeXBuilder class more abstract
"""


_IMPORT_ERROR_MSG = u"{0} was not detected, please run \
'pip install {0}' to install it."

try:
    from flask_script import Command
    from flask_script import Manager
    from flask_script import Server
    from flask_script import Option
    from flask_script import prompt_bool
    from flask_script import prompt_pass
except ImportError:
    print(_IMPORT_ERROR_MSG.format("flask_script"))
    exit(1)

try:
    from flask import Flask
except ImportError as msg:
    print(_IMPORT_ERROR_MSG.format("flask"))
    exit(1)

import os

from gpsladder.tex_builder import TeXBuilder
from gpsladder.gpsladder import GPSLadder

THIS_DIR = os.path.dirname(os.path.abspath(__file__))


class GPSLadderFigGenerator(Command):
    """Generate GPS ladder figure"""
    option_list = (
        Option(u'--input', u'-i', action="store", dest=u"input",
               help=u"Input data (default: packets.txt)",
               type=str, default=u"ladder_data.txt"),
        Option(u'--template', u'-t', action="store", dest=u"template",
              help=u"OPTIONAL: template file",
              type=str, default=""),
        Option(u'--template-dir', u'-D', action="store", dest=u"template_dir",
               help=u"OPTIONAL: directory which stores your template",
               type=str, default=""),
        Option(u'--output', u'-o', action="store", dest=u"output",
               help=u"Output filename (default: example.tex)",
               type=str, default=u'example.tex'),
        Option(u"--output-dir", u"-d", action="store", dest=u"output_dir",
               help=u"OPTIONAL: directory to store output file",
               type=str, default="")
    )

    def __init__(self):
        super(GPSLadderFigGenerator, self).__init__()

    def run(self, input, template, template_dir, output, output_dir):
        """Generate GPS figure"""

        gl = GPSLadder(os.path.join(THIS_DIR, input))

        # parameters
        label_numbers_ub = 15
        import math
        if gl.width > label_numbers_ub:
            x_step = int(math.ceil(gl.width / label_numbers_ub))
        else:
            x_step = 1
        if gl.height > label_numbers_ub:
            y_step = int(math.ceil(gl.height / label_numbers_ub))
        else:
            y_step = 1

        args = {
            "width": gl.width + 1,
            "height": gl.height + 1,
            "nodes": gl.ladder_nodes,
            "xlabels": [x for x in range(0, int(gl.width + 1), x_step)],
            "ylabels": [y for y in range(0, int(gl.height + 1), y_step)]
        }

        # os.path.join(THIS_DIR, "template"), {"default": "gps_figure_template.tex"}
        tex_builder = TeXBuilder()
        tex_doc = tex_builder.make_tex(args)

        if len(output_dir) == 0:
            output_dir = THIS_DIR
        else:
            os.mkdir(output_dir)

        add_msg = "%% This file is generated by Jinja2"
        with open(os.path.join(output_dir, output), 'w') as texf:
            texf.write("%s\n" % add_msg)
            texf.write(tex_doc)


if __name__ == "__main__":
    app = Flask(__name__)
    shell_manager = Manager(app)
    shell_manager.add_command(u"make_tex", GPSLadderFigGenerator())

    shell_manager.run()











